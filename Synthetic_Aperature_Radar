var shp = ee.FeatureCollection(Airport)
Map.addLayer(shp, {}, 'Airport')


var collectionVV = ee.ImageCollection('COPERNICUS/S1_GRD')
    .filter(ee.Filter.eq('instrumentMode', 'IW'))
    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))
    .filter(ee.Filter.eq('orbitProperties_pass', 'DESCENDING'))
    .filterBounds(Airport)
    .select(['VV']);
print(collectionVV);

var collectionVH = ee.ImageCollection('COPERNICUS/S1_GRD')
    .filter(ee.Filter.eq('instrumentMode', 'IW'))
    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
    .filter(ee.Filter.eq('orbitProperties_pass', 'DESCENDING'))
    .filterBounds(Airport)
    .select(['VH']);
print(collectionVH);

Map.centerObject(geometry, 13);

var VV = collectionVV.median();
Map.addLayer(VV.clip(geometry), {min: -14, max: -7}, 'VV');
var VH = collectionVH.median();
Map.addLayer(VH.clip(geometry), {min: -20, max: -7}, 'VH');


Export.image.toDrive({
  image: VV,
  description: 'Delhi_VV',
  scale: 30,
  region: geometry
});

Export.image.toDrive({
  image: VH,
  description: 'Delhi_VV',
  scale: 30,
  region: geometry
});

Export.image.toDrive({
  image: HV,
  description: 'Delhi_HV',
  scale: 30,
  region: geometry
});

